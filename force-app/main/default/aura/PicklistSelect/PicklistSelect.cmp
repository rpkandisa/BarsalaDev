<aura:component
  controller="PicklistSelectController"
  implements="force:appHostable,flexipage:availableForAllPageTypes"
  description="Renders a lightning:select component with options populated from a picklist field."
>
  <!-- required -->
  <aura:attribute
    name="objectName"
    type="String"
    required="true"
    default="Account"
  />
  <aura:attribute
    name="fieldName"
    type="String"
    required="true"
    default="Type"
  />

  <aura:attribute name="isdisabled" type="boolean" default="false" />

  <!-- optional -->
  <aura:attribute
    name="label"
    type="String"
    default="Label"
    description="Text that describes the desired select input. Default is the field's label."
  />
  <aura:attribute
    name="SelValue"
    type="String"
    description="The value of the select, also used as the default value to select the right option during init. If no value is provided, the first option will be selected."
  />
  <aura:attribute
    name="class"
    type="String"
    description="A CSS class that will be applied to the outer element. This style is in addition to base classes associated with the component."
  />

  <!-- event handlers, as exposed by lightning:select component -->
  <aura:attribute
    name="onblur"
    type="Aura.Action"
    description="The action triggered when the element releases focus."
  />
  <aura:attribute
    name="onfocus"
    type="Aura.Action"
    description="The action triggered when the element receives focus."
  />
  <aura:attribute
    name="onchange"
    type="Aura.Action"
    description="The action triggered when a value attribute changes."
  />

  <aura:attribute
    name="options"
    type="List"
    access="private"
    description="The picklist options to choose from. Populated during component initialization."
  />
  <aura:handler
    name="change"
    value="{!v.SelValue}"
    action="{!c.onwrpEventUpdate}"
  />
  <aura:handler name="init" value="{!this}" action="{!c.doInit}" />

  <lightning:select
    name="picklistSelect"
    label="{!v.label}"
    value="{!v.SelValue}"
    disabled="{!v.isdisabled}"
  >
    <aura:iteration var="opt" items="{!v.options}">
      <aura:if isTrue="{!v.SelValue == opt.value}">
        <option value="{!opt.value}" selected="true">{!opt.label}</option>
        <aura:set attribute="else">
          <option value="{!opt.value}">{!opt.label}</option>
        </aura:set>
      </aura:if>
    </aura:iteration>
  </lightning:select>
</aura:component>